# scripts/seed.py
# –°–∫—Ä–∏–ø—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö (seeding) üå±

from db.session import SessionLocal
from db.crud import ProjTypeRepository, VesselTypeRepository, ClassSocietyRepository


def seed_proj_types() -> None:
    """
    –ù–∞–ø–æ–ª–Ω—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É proj_type –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.
    """
    session = SessionLocal()
    try:
        # –°–ø–∏—Å–æ–∫ —Ç–∏–ø–æ–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
        types_data = [
            ("–ù–û–í–û–ï –°–£–î–ù–û", "–ü—Ä–æ–µ–∫—Ç—ã –Ω–æ–≤—ã—Ö —Å—É–¥–æ–≤"),
            ("–ü–ï–†–ï–û–ë–û–†–£–î–û–í–ê–ù–ò–ï", "–ü—Ä–æ–µ–∫—Ç—ã –ø–µ—Ä–µ–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è —Å—É–¥–æ–≤"),
            ("–†–ê–ó–í–ò–¢–ò–ï", "–ü—Ä–æ–µ–∫—Ç—ã, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏"),
            ("–ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ö–ê", "–ü—Ä–æ–µ–∫—Ç –¥–ª—è —É—á–µ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –ø–æ—Ç–µ—Ä—å –≤—Ä–µ–º–µ–Ω–∏"),
        ]
        repo = ProjTypeRepository(session)
        for name, desc in types_data:
            repo.create_proj_types(name, desc)

        session.commit()
        print("‚úîÔ∏è –¢–∞–±–ª–∏—Ü–∞ proj_type –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏")
    except Exception as e:
        session.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ proj_type: {e}")
        raise
    finally:
        session.close()

def seed_vessel_types() -> None:
    """
    –ù–∞–ø–æ–ª–Ω—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É vessel_type –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.
    """
    session = SessionLocal()
    try:
        # –°–ø–∏—Å–æ–∫ —Ç–∏–ø–æ–≤ —Å—É–¥–æ–≤ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
        types_data = [
            ("00. –ê–î–û–ú–ê–¢", ""),
            ("00. –°–ï–†–ò–ò –°–£–î–û–í", ""),
            ("01. –ù–ï–§–¢–ï–ù–ê–õ–ò–í–ù–´–ï", ""),
            ("02. –ù–ï–§–¢–ï–ù–ê–õ–ò–í–ù–´–ï - –•–ò–ú–û–í–û–ó–´", ""),
            ("03. –•–ò–ú–û–í–û–ó–´", ""),
            ("04. –ì–ê–ó–û–í–û–ó–´", ""),
            ("05. –ù–ê–õ–ò–í–ù–´–ï –ü–†–û–ß–ò–ï", ""),
            ("06. –ù–ï–§–¢–ï–ù–ê–í–ê–õ–û–ß–ù–´–ï –ò –ù–ï–§–¢–ï–†–£–î–û–í–û–ó–´", ""),
            ("07. –†–£–î–û–í–û–ó–´ –ò –ù–ê–í–ê–õ–û–ß–ù–´–ï", ""),
            ("08. –°–£–î–ê –î–õ–Ø –ì–ï–ù–ì–†–£–ó–ê", ""),
            ("09. –ì–†–£–ó–û–ü–ê–°–°–ê–ñ–ò–†–°–ö–ò–ï", ""),
            ("10. –ö–û–ù–¢–ï–ô–ù–ï–†–ù–´–ï, –ë–ê–†–ñ–ï–í–û–ó–´, –î–û–ö–û–í–´–ï", ""),
            ("11. –°–£–î–ê –î–õ–Ø –ü–ï–†–ï–í–û–ó–ö–ò –¢–†–ê–ù–°–ü–û–†–¢–ù–´–• –°–†–ï–î–°–¢–í", ""),
            ("12. –†–´–ë–û–ü–†–û–ú–´–°–õ–û–í–´–ï –ë–ê–ó–´, –†–´–ë–û–¢–†–ê–ù–°–ü–û–†–¢–ù–´–ï –°–£–î–ê", ""),
            ("13.1 –†–´–ë–û–ü–†–û–ú–´–°–õ–û–í–´–ï –±–æ–ª–µ–µ 45 –º", ""),
            ("13.2 –†–´–ë–û–ü–†–û–ú–´–°–õ–û–í–´–ï –º–µ–Ω–µ–µ 45 –º", ""),
            ("14. –ü–ê–°–°–ê–ñ–ò–†–°–ö–ò–ï –ò –ü–ê–°–°–ê–ñ–ò–†–°–ö–ò–ï –ë–ï–°–ö–û–ï–ß–ù–´–ï", ""),
            ("15. –°–£–î–ê –û–ë–ï–°–ü–ï–ß–ï–ù–ò–Ø", ""),
            ("16. –ë–£–ö–°–ò–†–´", ""),
            ("17. –ó–ï–ú–°–ù–ê–†–Ø–î–´ –ò –ó–ï–ú–õ–ï–°–û–°–´", ""),
            ("18. –†–ï–§–†–ò–ñ–ï–†–ê–¢–û–†–ù–´–ï", ""),
            ("19. –õ–ï–î–û–ö–û–õ–´", ""),
            ("20. –ù–ê–£–ß–ù–û-–ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï", ""),
            ("21. –ü–†–û–ß–ò–ï", ""),
            ("22. –ú–ê–õ–û–ú–ï–†–ù–´–ï, –ü–†–û–ì–£–õ–û–ß–ù–´–ï", ""),
            ("24. –ü–ê–†–£–°–ù–´–ï, –£–ß–ï–ë–ù–´–ï", ""),
        ]
        repo = VesselTypeRepository(session)
        for name, desc in types_data:
            repo.create_vessel_types(name, desc)

        session.commit()
        print("‚úîÔ∏è –¢–∞–±–ª–∏—Ü–∞ vessel_type –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏")
    except Exception as e:
        session.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ vessel_type: {e}")
        raise
    finally:
        session.close()

def seed_class_societys() -> None:
    """
    –ù–∞–ø–æ–ª–Ω—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É class_societys –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.
    """
    session = SessionLocal()
    try:
        # –°–ø–∏—Å–æ–∫ –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã—Ö –æ–±—â–µ—Å—Ç–≤
        types_data = [
            ("01. –†–°", "–†–æ—Å—Å–∏–π—Å–∫–∏–π –ú–æ—Ä—Å–∫–æ–π –†–µ–≥–∏—Å—Ç—Ä –°—É–¥–æ—Ö–æ–¥—Å—Ç–≤–∞"),
            ("02. –†–ö–û", "–†–æ—Å—Å–∏–π—Å–∫–æ–µ –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ"),
            ("03. –ü—Ä–æ—á–µ–µ", "–ü—Ä–æ—á–∏–µ –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ –æ–±—â–µ—Å—Ç–≤–∞"),
        ]
        repo = ClassSocietyRepository(session)
        for name, desc in types_data:
            repo.create_class_society_name(name, desc)

        session.commit()
        print("‚úîÔ∏è –¢–∞–±–ª–∏—Ü–∞ class_societys –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏")
    except Exception as e:
        session.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ class_societys: {e}")
        raise
    finally:
        session.close()


if __name__ == "__main__":
    seed_proj_types()
    seed_vessel_types()
    seed_class_societys()
