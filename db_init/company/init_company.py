# db_init/catalogs/init_catalogs.py

from db_init.company.seed_company import (
    seed_users,
    seed_departments,
    seed_roles,
)
from db_init.company.models_company import Base
from db_init.config import DATABASE_URL
from sqlalchemy import create_engine
from sqlalchemy.engine import Engine
from utils.logger import LoggerManager


class DBInitCatalogs:
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–∞–±–ª–∏—Ü—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ (–∫–∞—Ç–∞–ª–æ–≥–æ–≤).
    """

    def __init__(self, db_url: str = DATABASE_URL) -> None:
        self.logger = LoggerManager(__name__).get_logger()
        self.db_url: str = db_url
        self.engine: Engine | None = None
        self.logger.info(f"üöÄ DBInitCatalogs —Å–æ–∑–¥–∞–Ω —Å URL={self.db_url}")

    def get_engine(self) -> Engine:
        if self.engine is None:
            self.engine = create_engine(
                self.db_url,
                connect_args={"check_same_thread": False},
                future=True,
            )
            self.logger.info(f"üîå Engine —Å–æ–∑–¥–∞–Ω –¥–ª—è SQLite: {self.db_url}")
        return self.engine

    def create_tables(self) -> None:
        engine = self.get_engine()
        Base.metadata.create_all(engine)
        self.logger.info("üì¶ –¢–∞–±–ª–∏—Ü—ã –∫–∞—Ç–∞–ª–æ–≥–æ–≤ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã")

    def seed_all(self) -> None:
        seed_users()
        seed_departments()
        seed_roles()

    def run(self) -> None:
        self.logger.info("üèÅ –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–æ–≤...")
        self.create_tables()
        self.seed_all()
        self.logger.info("üéâ –ö–∞—Ç–∞–ª–æ–≥–∏ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")


if __name__ == "__main__":
    DBInitCatalogs().run()
